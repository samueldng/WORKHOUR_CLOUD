version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: ..
      dockerfile: docker/frontend.Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - workhour-network

  # Backend service
  backend:
    build:
      context: ..
      dockerfile: docker/backend.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/workhourcloud
      - JWT_SECRET=your-secret-key
    depends_on:
      db:
        condition: service_healthy
    networks:
      - workhour-network

  # Database service
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: workhourcloud
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - workhour-network

  # Redis service
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - workhour-network

volumes:
  postgres_data:

networks:
  workhour-network:
    driver: bridge